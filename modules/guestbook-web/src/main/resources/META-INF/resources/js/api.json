{
  "swagger": "2.0",
  "info": {
    "title": "Return Merchandise Authorization API",
    "description": "Return Merchandise Authorization (RMA) will allow customers to initiate returns on the WebStore without involving Customer Care. The RMA is an API based service that will be used primarily by customers \/ Customer Care agents \/ store associates through multiple customer touch points. The inclusion of a RMA service to the existing RLS service will allow all the capabilities that exist now with RLS plus provide functionality for returns as well.\r\n\r\nOverview\r\n\r\nRMA Service exposes unique operations to:\r\n\r\nRMA Eligibility - Perform return eligibility check for an order and return eligible \/ ineligible items.\r\n\r\nRMA Request - Create unique RMA ID and return \/ email RMA confirmation.\r\n\r\nRMA Lookup - Perform RMA look up \/ package eligibility and return RMA IDs \/ RMA details \/ package eligibility.",
    "version": "V1"
  },
  "host": "anypoint.mulesoft.com",
  "basePath": "/mocking/api/v1/links/19142d12-cfe1-47a1-b601-0a5f43a24482/",
  "schemes": [
    "https"
  ],
  "externalDocs": {
    "url": "",
    "description": "",
    "x-amf-title": "Generate RMA API"
  },
  "paths": {
    "/generateRMA": {
      "get": {
        "operationId": "GenerateRMA",
        "description": "To generate RMA against returnable item(s).  ",
        "produces": [
          "application/json"
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request GET 'https:\/\/anypoint.mulesoft.com\/mocking\/api\/v1\/links\/19142d12-cfe1-47a1-b601-0a5f43a24482\/generateRMA' \r\n--data-raw ''"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/anypoint.mulesoft.com\/mocking\/api\/v1\/links\/19142d12-cfe1-47a1-b601-0a5f43a24482\/generateRMA\")\r\n  .method(\"GET\", null)\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/anypoint.mulesoft.com\/mocking\/api\/v1\/links\/19142d12-cfe1-47a1-b601-0a5f43a24482\/generateRMA\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddParameter(\"text\/plain\", \"\",  ParameterType.RequestBody);\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "201": {
            "description": "Success!!!",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "x-amf-mediaType": "application/json",
            "schema": {
              "description": "Your RMA number (20200415-001) has been genearted.",
              "example": {
                "strict": true,
                "value": {
                  "RMA": "20200415-001"
                }
              },
              "type": "object",
              "additionalProperties": true
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    }
  },

  "definitions": {
    "ApiCargowiseRMAwithlabelPostRequest": {
      "type": "object",
      "properties": {
        "application": {
          "type": "string"
        },
        "buyer": {
          "type": "object",
          "properties": {
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "addressCode": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "contact": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                }
              }
            },
            "country": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "organizationCode": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            },
            "state": {
              "type": "string"
            }
          }
        },
        "deliveryInstructions": {
          "type": "string"
        },
        "orderDetails": {
          "type": "object",
          "properties": {
            "additionalTerms": {
              "type": "string"
            },
            "confirmDate": {
              "type": "string"
            },
            "confirmNumber": {
              "type": "string"
            },
            "containerMode": {
              "type": "string"
            },
            "countryOfOrigin": {
              "type": "string"
            },
            "currency": {
              "type": "string"
            },
            "date": {
              "type": "string"
            },
            "deliveryDate": {
              "type": "string"
            },
            "followupDate": {
              "type": "string"
            },
            "goodsDescription": {
              "type": "string"
            },
            "incoTerms": {
              "type": "string"
            },
            "invoiceDate": {
              "type": "string"
            },
            "invoiceNumber": {
              "type": "string"
            },
            "number": {
              "type": "string"
            },
            "requiredPickupDate": {
              "type": "string"
            },
            "serviceLevel": {
              "type": "string"
            },
            "transportMode": {
              "type": "string"
            }
          }
        },
        "orderLineDetails": {
          "type": "array",
          "items": [
            {
              "type": "object",
              "properties": {
                "commercialInvoiceNumber": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "innerPacks": {
                  "type": "object",
                  "properties": {
                    "height": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "itemPrice": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "lwhuom": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "quantityUOM": {
                      "type": "string"
                    },
                    "volume": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "volumeUOM": {
                      "type": "string"
                    },
                    "weight": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "weightUOM": {
                      "type": "string"
                    },
                    "width": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "itemPrice": {
                  "type": "integer",
                  "format": "int32"
                },
                "number": {
                  "type": "integer",
                  "format": "int32"
                },
                "originCountry": {
                  "type": "string"
                },
                "outerPacks": {
                  "type": "object",
                  "properties": {
                    "height": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "itemPrice": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "length": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "lwhuom": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "quantityUOM": {
                      "type": "string"
                    },
                    "volume": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "volumeUOM": {
                      "type": "string"
                    },
                    "weight": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "weightUOM": {
                      "type": "string"
                    },
                    "width": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "partNumber": {
                  "type": "string"
                },
                "quantityInvoiced": {
                  "type": "integer",
                  "format": "int32"
                },
                "quantityReceived": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          ]
        },
        "pickupInstructions": {
          "type": "string"
        },
        "referenceNumbers": {
          "type": "array",
          "items": [
            {
              "type": "object",
              "properties": {
                "dataType": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "supplier": {
          "type": "object",
          "properties": {
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "addressCode": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "contact": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                }
              }
            },
            "country": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "organizationCode": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            },
            "state": {
              "type": "string"
            }
          }
        },
        "xpoCustomerId": {
          "type": "string"
        }
      }
    },
    "ApiCargowiseRMAwithlabelPostResponse": {
      "type": "object",
      "properties": {
        "errorDetails": {
          "type": "array",
          "items": [
            {
              "type": "string"
            }
          ]
        },
        "labelSatus": {
          "type": "string"
        },
        "orderLabelTemplate": {
          "type": "object",
          "properties": {
            "labelContentAsBase64": {
              "type": "string"
            }
          }
        },
        "orderNumber": {
          "type": "string"
        },
        "orderSatus": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request - There are miscellaneous errors with the request, for example, mismatches between the request and what is allowed for the operation."
    },
    "401": {
      "description": "Unauthorized or 403 Forbidden - Authentication errors."
    },
    "404": {
      "description": "Not Found - Invalid URL path."
    },
    "413": {
      "description": "Request Entity Too Large - The request data was too large. This is based on the SOA Input Size quota."
    },
    "500": {
      "description": "Internal Server Error - This generic error message appears when an unexpected condition was encountered and a more specific message is not suitable."
    },
    "503": {
      "description": "Service Unavailable - The caller has hit a throttle or the request was rejected because the Atom is starting or stopping."
    },
    "522": {
      "description": "Connection Timed Out - This message is returned to the client when the SOA Worker Maximum Execution Time has been exceeded."
    },
    "default": {
      "description": "Unidentified Exception"
    }
  },
  "security": [
    {}
  ]
}
