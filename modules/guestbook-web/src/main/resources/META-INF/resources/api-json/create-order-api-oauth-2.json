{
  "swagger": "2.0",
  "info": {
    "title": "Create Order API-OAuth-2",
    "version": "v1"
  },
  "host": "create-order-api-oauth-2.us-e2.cloudhub.io",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "XPO Logistics uses OAuth 2.0 client credentials to secure access to the API endpoints. The Client Credentials grant type can be used by clients to obtain an access token outside of the context of a user. Request for a bearer token using the oAuth client credentials and x-api-key provided by XPO.\n\n<img src=\"/o/com.liferay.docs.guestbook.portlet/images/auth_token_flow.png\" alt=\"Authorization Flow Diagram\">"
    }
  ],
  "paths": {
    "/create-order": {
      "post": {
        "operationId": "create-order",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "example": {
                "orderId": "1234",
                "orderDate": "2020-03-22",
                "purchaseAmount": "150.00",
                "currencyCode": "USD",
                "customerName": "Nick Rimando",
                "customerAddress": "California",
                "customerMobile": "9717395464"
              }
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST \"https:\/\/create-order-api-oauth-2.us-e2.cloudhub.io\/api\/create-order\" --header \"Authorization: Bearer pnL5_uUlSbW11wQfCih-4nBSauE_dYc5w_38IEADeN_kprD9geKVRulFtCMmgSO9BIFztojgn0AWwnFPgfdI5Q\" --header \"Content-Type: application\/json\" --data-raw \"{  \"orderId\": \"1234\",  \"orderDate\": \"2020-03-22\",  \"purchaseAmount\": \"150.00\",  \"currencyCode\": \"USD\",  \"customerName\": \"Nick Rimando\",  \"customerAddress\": \"California\",  \"customerMobile\": \"9717395464\"}\""
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()  .build();MediaType mediaType = MediaType.parse(\"application\/json\");RequestBody body = RequestBody.create(mediaType, \"{  \"orderId\": \"1234\",  \"orderDate\": \"2020-03-22\",  \"purchaseAmount\": \"150.00\",  \"currencyCode\": \"USD\",  \"customerName\": \"Nick Rimando\",  \"customerAddress\": \"California\",  \"customerMobile\": \"9717395464\"}\");Request request = new Request.Builder()  .url(\"https:\/\/create-order-api-oauth-2.us-e2.cloudhub.io\/api\/create-order\")  .method(\"POST\", body)  .addHeader(\"Authorization\", \"Bearer pnL5_uUlSbW11wQfCih-4nBSauE_dYc5w_38IEADeN_kprD9geKVRulFtCMmgSO9BIFztojgn0AWwnFPgfdI5Q\")  .addHeader(\"Content-Type\", \"application\/json\")  .build();Response response = client.newCall(request).execute();"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/create-order-api-oauth-2.us-e2.cloudhub.io\/api\/create-order\");client.Timeout = -1;var request = new RestRequest(Method.POST);request.AddHeader(\"Authorization\", \"Bearer pnL5_uUlSbW11wQfCih-4nBSauE_dYc5w_38IEADeN_kprD9geKVRulFtCMmgSO9BIFztojgn0AWwnFPgfdI5Q\");request.AddHeader(\"Content-Type\", \"application\/json\");request.AddParameter(\"application\/json\", \"{  \"orderId\": \"1234\",  \"orderDate\": \"2020-03-22\",  \"purchaseAmount\": \"150.00\",  \"currencyCode\": \"USD\",  \"customerName\": \"Nick Rimando\",  \"customerAddress\": \"California\",  \"customerMobile\": \"9717395464\"}\",  ParameterType.RequestBody);IRestResponse response = client.Execute(request);Console.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "status": "200",
                "message": "Order Created Successfully"
              }
            }
          },
          "500": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "status": "500",
                "message": "Internal Server Error"
              }
            }
          },
          "401": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "status": "401",
                "message": "Unauthorized or 403 Forbidden - Authentication errors."
              }
            }
          }
        }
      }
    },
    "/get-order/{orderId}": {
      "x-amf-description": "Get order by passing the order id as querystring",
      "get": {
        "operationId": "get-order/{orderId}",
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "Authorization",
            "required": true,
            "in": "header",
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request GET \"https:\/\/create-order-api-oauth-2.us-e2.cloudhub.io\/api\/get-order\/1234\" --header \"Authorization: Bearer pnL5_uUlSbW11wQfCih-4nBSauE_dYc5w_38IEADeN_kprD9geKVRulFtCMmgSO9BIFztojgn0AWwnFPgfdI5Q\" --header \"Content-Type: application\/json\" "
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()  .build();MediaType mediaType = MediaType.parse(\"application\/json\");Request request = new Request.Builder()  .url(\"https:\/\/create-order-api-oauth-2.us-e2.cloudhub.io\/api\/get-order\/1234\")    .addHeader(\"Authorization\", \"Bearer pnL5_uUlSbW11wQfCih-4nBSauE_dYc5w_38IEADeN_kprD9geKVRulFtCMmgSO9BIFztojgn0AWwnFPgfdI5Q\")  .addHeader(\"Content-Type\", \"application\/json\")  .build();Response response = client.newCall(request).execute();"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/create-order-api-oauth-2.us-e2.cloudhub.io\/api\/get-order\/1234\");client.Timeout = -1;var request = new RestRequest(Method.POST);request.AddHeader(\"Authorization\", \"Bearer pnL5_uUlSbW11wQfCih-4nBSauE_dYc5w_38IEADeN_kprD9geKVRulFtCMmgSO9BIFztojgn0AWwnFPgfdI5Q\");request.AddHeader(\"Content-Type\", \"application\/json\");IRestResponse response = client.Execute(request);Console.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "orderId": "1234",
                "orderDate": "2020-03-22",
                "purchaseAmount": "150.00",
                "currencyCode": "USD",
                "customerName": "Nick Rimando",
                "customerAddress": "California",
                "customerMobile": "9717395464"
              }
            }
          },
          "401": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "status": "401",
                "message": "Unauthorized or 403 Forbidden - Authentication errors."
              }
            }
          },
          "404": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "status": "404",
                "message": "Order not found"
              }
            }
          },
          "500": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "status": "500",
                "message": "Internal Server Error"
              }
            }
          }
        }
      }
    },
    "/get-orders": {
      "x-amf-description": "Get all orders",
      "get": {
        "operationId": "get-orders",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "in": "header",
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request GET \"https://create-order-api-oauth-2.us-e2.cloudhub.io/api/get-orders\" --header \"Authorization: Bearer pnL5_uUlSbW11wQfCih-4nBSauE_dYc5w_38IEADeN_kprD9geKVRulFtCMmgSO9BIFztojgn0AWwnFPgfdI5Q\" --header \"Content-Type: application\/json\""
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client=new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(\"application\/json\");Request request=new Request.Builder().url(\"https://create-order-api-oauth-2.us-e2.cloudhub.io/api/get-orders\").addHeader(\"Authorization\", \"Bearer pnL5_uUlSbW11wQfCih-4nBSauE_dYc5w_38IEADeN_kprD9geKVRulFtCMmgSO9BIFztojgn0AWwnFPgfdI5Q\").addHeader(\"Content-Type\", \"application\/json\").build();Response response=client.newCall(request).execute();"
          },
          {
            "lang": "C#",
            "source": "var client=new RestClient(\"https://create-order-api-oauth-2.us-e2.cloudhub.io/api/get-orders\");client.Timeout=-1;var request=new RestRequest(Method.POST);request.AddHeader(\"Authorization\", \"Bearer pnL5_uUlSbW11wQfCih-4nBSauE_dYc5w_38IEADeN_kprD9geKVRulFtCMmgSO9BIFztojgn0AWwnFPgfdI5Q\");IRestResponse response=client.Execute(request);Console.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": [
                {
                  "orderId": "1234",
                  "orderDate": "2020-03-22",
                  "purchaseAmount": "150.00",
                  "currencyCode": "USD",
                  "customerName": "Nick Rimando",
                  "customerAddress": "California",
                  "customerMobile": "9717395464"
                },
                {
                  "orderId": "9807",
                  "orderDate": "2020-03-22",
                  "purchaseAmount": "200.00",
                  "currencyCode": "USD",
                  "customerName": "Julian Green",
                  "customerAddress": "London",
                  "customerMobile": "9807654310"
                }
              ]
            }
          },
          "401": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "status": "401",
                "message": "Unauthorized or 403 Forbidden - Authentication errors."
              }
            }
          },
          "500": {
            "description": "",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "status": "500",
                "message": "Internal Server Error"
              }
            }
          }
        }
      }
    }
  }
}
